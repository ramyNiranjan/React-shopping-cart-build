{"version":3,"sources":["context/CartContext.jsx","components/Cart.jsx","pages/CartPage.jsx","components/Layout.jsx","components/ProductList.jsx","components/FetchReviews.jsx","components/ProductDetailed.jsx","components/FetchData.jsx","pages/StartPage.jsx","components/FetchDataDescribed.jsx","pages/DetailedPage.jsx","components/TableStartPage.jsx","components/Order.jsx","pages/CheckoutPage.jsx","App.js","serviceWorker.js","index.js"],"names":["CartContext","createContext","CartContextProvider","children","useState","cartItems","setCartItems","totalSum","setTotalSum","itemCount","setItemCount","showCart","setShowCart","sumItems","localStorage","setItem","JSON","stringify","storage","reduce","total","product","quantity","price","toFixed","useEffect","cartDataStorage","getItem","parse","gettingDataFromStorage","contextValues","addProduct","find","item","id","prevItem","increase","newCartItem","findIndex","decrease","removeProduct","filter","clearCart","isInCart","some","toggleCart","Provider","value","Cart","useContext","className","alt","name","src","image","onClick","CartPage","toggle","length","map","key","to","Layout","renderShowCart","renderCart","ProductList","description","images","rating","stock","cartProduct","small","useRef","descriptionShort","toString","substring","style","marginTop","width","maxHeight","minHeight","objectFit","FetchReviews","productId","data","setData","axios","get","then","res","console","log","Object","keys","entries","index","title","author","date","ProductDetailed","FetchData","StartPage","FetchDataDescribed","DetailedPage","props","match","params","TableStartPage","img","scope","withRouter","setOrder","discountPrice","setDiscountPrice","userInput","history","moment","format","post","ordered_by","totalPrice","productList","ordered_at","response","postOrder","push","CheckoutPage","context","discountCupon","setDescount","inputValue","setinputValue","order","apiKey","NaN","setNaN","productTotalPrice","parseInt","discountValues","e","current","toUpperCase","descountApi","discountCounter","discountprice","discount","type","ref","placeholder","disabled","ErrorCheck","Math","ceil","App","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a948c572.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [totalSum, setTotalSum] = useState(0);\r\n  const [itemCount, setItemCount] = useState([]);\r\n  const [showCart, setShowCart] = useState(false);\r\n\r\n  const storage = (cartItems) => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n  };\r\n\r\n  const sumItems = (cartItems) => {\r\n    storage(cartItems);\r\n    let itemCount = cartItems.reduce(\r\n      (total, product) => total + product.quantity,\r\n      0\r\n    );\r\n    setItemCount(itemCount);\r\n    let total = cartItems\r\n      .reduce((total, product) => total + product.price * product.quantity, 0)\r\n      .toFixed(2);\r\n    setTotalSum(total);\r\n  };\r\n\r\n  const gettingDataFromStorage = () => {\r\n    const cartDataStorage = localStorage.getItem(\"cart\")\r\n      ? JSON.parse(localStorage.getItem(\"cart\"))\r\n      : [];\r\n    setCartItems(cartDataStorage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    gettingDataFromStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sumItems(cartItems);\r\n  }, [totalSum, itemCount, cartItems]);\r\n\r\n  const addProduct = (product) => {\r\n    if (!cartItems.find((item) => item.id === product.id)) {\r\n      setCartItems((prevItem) => [...prevItem, { ...product, quantity: 1 }]);\r\n    }\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n  const increase = (product) => {\r\n    const newCartItem = [...cartItems];\r\n    newCartItem[newCartItem.findIndex((item) => item.id === product.id)]\r\n      .quantity++;\r\n    setCartItems(newCartItem);\r\n  };\r\n\r\n  const decrease = (product) => {\r\n    const newCartItem = [...cartItems];\r\n    newCartItem[newCartItem.findIndex((item) => item.id === product.id)]\r\n      .quantity--;\r\n    setCartItems(newCartItem);\r\n  };\r\n\r\n  const removeProduct = (product) => {\r\n    const newCartItem = cartItems.filter((item) => item.id !== product.id);\r\n    setCartItems(newCartItem);\r\n  };\r\n\r\n  const isInCart = (product, cartItems) => {\r\n    return cartItems.some((item) => item.id === product.id);\r\n  };\r\n\r\n  const toggleCart = (showCart) => {\r\n    return showCart ? setShowCart(false) : setShowCart(true);\r\n  };\r\n\r\n  const contextValues = {\r\n    cartItems,\r\n    totalSum,\r\n    itemCount,\r\n    addProduct,\r\n    increase,\r\n    decrease,\r\n    removeProduct,\r\n    clearCart,\r\n    isInCart,\r\n    toggleCart,\r\n    showCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={contextValues}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContextProvider;\r\n\r\n// const handleCheckout = () => {};\r\n","import React, { useContext } from \"react\";\r\nimport { CartContext } from \"../context/CartContext\";\r\nimport { BiPlusCircle, BiMinusCircle, BiTrash } from \"react-icons/bi\";\r\n\r\nexport default function Cart({ product }) {\r\n  const { increase, decrease, removeProduct } = useContext(CartContext);\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <div className=\"cart-header\">\r\n        <div className=\"cart-image-wrapper\">\r\n          <img className=\"cart-image\" alt={product.name} src={product.image} />\r\n        </div>\r\n        <h6 className=\"cart-name\">{product.name}</h6>\r\n      </div>\r\n      <div className=\"cart-info\">\r\n        <p className=\"cart-qty\">Qty: {product.quantity}</p>\r\n        <p className=\"cart-price\">Price: {product.price}:-</p>\r\n      </div>\r\n      <div className=\"cart-qty-change\">\r\n        <button\r\n          onClick={() => increase(product)}\r\n          className=\"cart-qty-increase button-qty\"\r\n        >\r\n          <BiPlusCircle />\r\n        </button>\r\n\r\n        {product.quantity > 1 && (\r\n          <button\r\n            onClick={() => decrease(product)}\r\n            className=\"cart-qty-decrease button-qty\"\r\n          >\r\n            <BiMinusCircle />\r\n          </button>\r\n        )}\r\n\r\n        {product.quantity === 1 && (\r\n          <button\r\n            onClick={() => removeProduct(product)}\r\n            className=\"cart-qty-remove button-qty\"\r\n          >\r\n            <BiTrash />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Cart from \"../components/Cart\";\r\nimport { CartContext } from \"../context/CartContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CartPage({ toggle }) {\r\n  const {\r\n    cartItems,\r\n    totalSum,\r\n    itemCount,\r\n    clearCart,\r\n    toggleCart,\r\n    showCart,\r\n  } = useContext(CartContext);\r\n  return (\r\n    <div className=\"cartpage\">\r\n      <h2 className=\"cartpage-title\">Shopping Cart</h2>\r\n      {cartItems.length ? (\r\n        <>\r\n          {cartItems.map((item) => (\r\n            <Cart key={item.id} product={item} />\r\n          ))}\r\n          <div>Total: {totalSum}:-</div>\r\n          <div>Items: {itemCount} pcs</div>\r\n          <button onClick={() => clearCart()} className=\"button-clear\">\r\n            <Link\r\n              onClick={() => toggleCart(showCart)}\r\n              to=\"/\"\r\n              className=\"link-clear\"\r\n            >\r\n              {\" \"}\r\n              Clear Cart\r\n            </Link>\r\n          </button>\r\n          <button className=\"button-checkout\">\r\n            <Link\r\n              onClick={() => toggleCart(showCart)}\r\n              to=\"/checkout\"\r\n              className=\"link-checkout\"\r\n            >\r\n              Go to checkout\r\n            </Link>\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <h5 className=\"cart-empty\">Your Cart is Empty</h5>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiShoppingCart } from \"react-icons/fi\";\r\nimport { CartContext } from \"../context/CartContext\";\r\nimport { useContext } from \"react\";\r\nimport CartPage from \"../pages/CartPage\";\r\n\r\nexport default function Layout({ children }) {\r\n  const { itemCount, toggleCart, showCart } = useContext(CartContext);\r\n\r\n  function renderCart() {\r\n    if (showCart) {\r\n      return (\r\n        <>\r\n          <span onClick={() => toggleCart(true)}>\r\n            <FiShoppingCart className=\"cart-ui\" />\r\n            {`(${itemCount})`}\r\n          </span>\r\n          <CartPage toggle={showCart} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderShowCart() {\r\n    if (!showCart) {\r\n      return (\r\n        <span onClick={() => toggleCart(false)}>\r\n          <FiShoppingCart className=\"cart-ui\" />\r\n          {`(${itemCount})`}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"header navbar fixed-top navbar-light  mb-4 header-color\">\r\n        <Link\r\n          onClick={(showCart) => toggleCart(showCart)}\r\n          //onClick={showCart && toggleCart(showCart)}\r\n          className=\"header-home link navbar-brand\"\r\n          to=\"/\"\r\n        >\r\n          <h4>Home</h4>\r\n        </Link>\r\n        {renderShowCart()}\r\n        {renderCart()}\r\n      </header>\r\n      {children}\r\n      <footer className=\"footer\">\r\n        <div>Room4Shop</div>\r\n        <div>Project Assignment for Javascript 3, React</div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useRef } from \"react\";\r\nimport { CartContext } from \"../context/CartContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductList = ({\r\n  name,\r\n  description,\r\n  price,\r\n  rating,\r\n  stock,\r\n  images,\r\n  id,\r\n}) => {\r\n  const image = images[0].src.small;\r\n  const cartProduct = { name, price, image, id };\r\n  const [showHide, setShowHide] = useState(false);\r\n  const { addProduct, cartItems, increase, isInCart } = useContext(CartContext);\r\n  const paragraf = useRef(true);\r\n  const [styles, setStyles] = useState();\r\n\r\n  function display(e) {\r\n    if (showHide) {\r\n      paragraf.current.innerText = `${description}`;\r\n\r\n      setShowHide(false);\r\n    } else {\r\n      setStyles(\"none\");\r\n      paragraf.current.innerText = \"\";\r\n      setShowHide(true);\r\n    }\r\n  }\r\n\r\n  const hide = () => {\r\n    if (showHide == false) {\r\n      return <button onClick={() => setShowHide(true)}>Read More</button>;\r\n    } else {\r\n      return <button onClick={() => setShowHide(false)}>Hide details</button>;\r\n    }\r\n  };\r\n\r\n  const descriptionShort = description.toString().substring(0, 20);\r\n\r\n  return (\r\n    <div\r\n      className=\"col-md-3 d-flex align-items-stretch \"\r\n      style={{ marginTop: 70 }}\r\n    >\r\n      <div className=\"items-wrapper card flex-grow\" style={{ width: 1000 }}>\r\n        <img\r\n          src={images[0].src.small}\r\n          alt={images[0].alt}\r\n          className=\"Image card-img-top\"\r\n          style={{\r\n            maxHeight: 170,\r\n            minHeight: 170,\r\n            objectFit: \"cover\",\r\n          }}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{name}</h5>\r\n          <p className=\"card-text\">Price :- {price}kr</p>\r\n          <p className=\"card-text\">{descriptionShort}...</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <Link to={`/product/${id}`}>\r\n            <button className=\"btn btn-outline-primary btn-sm mr-2\">\r\n              Info\r\n            </button>\r\n          </Link>\r\n\r\n          {!isInCart(cartProduct, cartItems) ? (\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => addProduct(cartProduct)}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"btn btn-outline-success btn-sm\"\r\n              onClick={() => increase(cartProduct)}\r\n            >\r\n              Add More\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//                     {!isInCart(cartProduct, cartItems) ? (\r\n//                         <button\r\n//                             className=\"btn btn-success btn-sm\"\r\n//                             onClick={() => addProduct(cartProduct)}>\r\n//                             Add to Cart\r\n//                         </button>\r\n//                     ) : (\r\n//                         <button\r\n//                             className=\"btn btn-outline-success btn-sm\"\r\n//                             onClick={() => increase(cartProduct)}>\r\n//                             Add More\r\n//                         </button>\r\n//                     )}\r\n//                 </div>\r\n\r\n//                 <div className=\"btn-container\"></div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default ProductList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Reviews from \"./Reviews\";\r\n\r\nconst FetchReviews = ({ productId }) => {\r\n  const [data, setData] = useState({});\r\n\r\n  const DataHandler = () => {\r\n    axios\r\n      .get(\r\n        `https://mock-data-api.firebaseio.com/e-commerce/reviews/${productId}.json`\r\n      )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          return setData(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    DataHandler();\r\n  }, []);\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"card-header\">Reviews</h5>\r\n      {Object.keys(data).length ? (\r\n        <>\r\n          {Object.entries(data).map((item, index) => (\r\n            <div key={index} className=\"card-body\">\r\n              <div className=\"card\">\r\n                <h6 className=\"card-header\">{item[1].title}</h6>\r\n                <div className=\"card-body\">\r\n                  <p>{item[1].description}</p>\r\n                  <footer className=\"blockquote-footer\">\r\n                    {item[1].author.name} {item[1].date}\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <span>No Reviews</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchReviews;\r\n","import React, { useContext } from \"react\";\r\nimport { CartContext } from \"../context/CartContext\";\r\nimport FetchReviews from \"./FetchReviews\";\r\n\r\nfunction ProductDetailed({ data }) {\r\n  const { name, price, id } = data;\r\n  const src = data.images ? data.images[0].src.small : \"\";\r\n  const cartProduct = { name, price, id, src };\r\n  const { addProduct, increase, isInCart, cartItems } = useContext(CartContext);\r\n  return (\r\n    <div className=\"detail-card card mx-5 \">\r\n      <img\r\n        src={data.images[0].src.small}\r\n        className=\"card-img-top\"\r\n        // style={{ maxHeight: 500, objectFit: \"cover\" }}\r\n      />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{data.name}</h5>\r\n        <h6>Price:- {data.price} kr</h6>\r\n        <p>{data.stock} in stock</p>\r\n        <h6 className=\"card-text\">{data.description}</h6>\r\n        {!isInCart(cartProduct, cartItems) ? (\r\n          <button\r\n            className=\"btn btn-success mt-4\"\r\n            onClick={() => addProduct(cartProduct)}\r\n          >\r\n            Add to Cart\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"btn btn-outline-success\"\r\n            onClick={() => increase(cartProduct)}\r\n          >\r\n            Add More\r\n          </button>\r\n        )}\r\n        <div className=\"card mt-4\">\r\n          <FetchReviews productId={data.id} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetailed;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductDetailed from \"./ProductDetailed\";\r\n\r\nconst FetchData = () => {\r\n  const [data, setData] = useState({});\r\n\r\n  const DataHandler = () => {\r\n    axios\r\n      .get(\"https://mock-data-api.firebaseio.com/e-commerce/products.json\")\r\n      .then((res) => {\r\n        // console.log(Object.entries(res.data));\r\n        setData(res.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    DataHandler();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-container row mx-5 wrapper-container\">\r\n      {Object.entries(data).map((item) => {\r\n        return <ProductList key={item[0]} {...item[1]} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchData;\r\n","import React from \"react\"\r\n\r\nimport FetchData from \"../components/FetchData\"\r\n\r\nfunction StartPage() {\r\n    return (\r\n        <>\r\n            <FetchData />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductDetailed from \"./ProductDetailed\";\r\n\r\nconst FetchDataDescribed = ({ productId }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  const DataHandler = () => {\r\n    axios\r\n      .get(\r\n        `https://mock-data-api.firebaseio.com/e-commerce/products/${productId}.json`\r\n      )\r\n      .then((res) => {\r\n        return setData(res.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    DataHandler();\r\n  }, []);\r\n\r\n  return <>{data && <ProductDetailed data={data} />}</>;\r\n};\r\n\r\nexport default FetchDataDescribed;\r\n","import React from \"react\";\r\nimport FetchDataDescribed from \"../components/FetchDataDescribed\";\r\n\r\nexport default function DetailedPage(props) {\r\n  // console.log(props);\r\n\r\n  const productId = props.match.params.id;\r\n\r\n  return (\r\n    <div className=\"detail-container info-fix\">\r\n      <FetchDataDescribed productId={productId} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst TableStartPage = ({ img, name, quantity, price }) => {\r\n  return (\r\n    <tr scope=\"row\">\r\n      <td>\r\n        <div className=\"checkout-image-wrapper\">\r\n          <img src={img} className={\"checkout-image\"} />\r\n        </div>\r\n      </td>\r\n      <td>{name}</td>\r\n      <td>{quantity} pcs</td>\r\n      <td>{price}:-</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableStartPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\n\r\nfunction Order({\r\n  setOrder,\r\n  discountPrice,\r\n  cartItems,\r\n  clearCart,\r\n  setDiscountPrice,\r\n  userInput,\r\n  history,\r\n}) {\r\n  const [date] = useState(moment().format(\"LLL\"));\r\n  const postOrder = (discountPrice, cartItems) => {\r\n    cartItems.length &&\r\n      axios\r\n        .post(\r\n          \"https://mock-data-api.firebaseio.com/e-commerce/orders/group4.json\",\r\n          {\r\n            ordered_by: userInput,\r\n            totalPrice: discountPrice,\r\n            productList: cartItems,\r\n            ordered_at: date,\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          console.log(response);\r\n          setDiscountPrice(0);\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    clearCart();\r\n    postOrder(discountPrice, cartItems);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"modal\">\r\n        <h2>Thank You {userInput}</h2>\r\n        <div className=\"modal-close\">\r\n          <AiFillCloseCircle onClick={() => history.push(\"/\")} />\r\n        </div>\r\n        <span>Your Order On the Way</span>\r\n        <button className=\"modal-conten\" onClick={() => history.push(\"/\")}>\r\n          Buy More\r\n        </button>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Order);\r\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { CartContext } from \"../context/CartContext\";\r\n\r\nimport TableStartPage from \"../components/TableStartPage\";\r\nimport Order from \"../components/Order\";\r\n\r\nfunction CheckoutPage() {\r\n  const context = useContext(CartContext);\r\n  const [discountCupon, setDescount] = useState({});\r\n  const [inputValue, setinputValue] = useState();\r\n  const [discountPrice, setDiscountPrice] = useState([]);\r\n  const [order, setOrder] = useState(false);\r\n  const apiKey = useRef();\r\n  const userInput = useRef();\r\n  const [NaN, setNaN] = useState(0);\r\n\r\n  let productTotalPrice = parseInt(context.totalSum);\r\n\r\n  const discountValues = (e) => {\r\n    setinputValue(apiKey.current.value.toUpperCase());\r\n\r\n    const descountApi = `https://mock-data-api.firebaseio.com/e-commerce/couponCodes/${inputValue}.json`;\r\n    axios.get(descountApi).then((res) => {\r\n      setDescount(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    discountValues();\r\n  }, [inputValue]);\r\n\r\n  useEffect(() => {\r\n    setDiscountPrice(discountCounter());\r\n  }, [discountCupon]);\r\n\r\n  const discountCounter = () => {\r\n    setNaN(productTotalPrice);\r\n    console.log(NaN);\r\n    const discountprice = discountCupon && discountCupon.discount;\r\n    if (\r\n      inputValue === \"BLACKFRIDAY\" ||\r\n      inputValue === \"SUMMER19\" ||\r\n      inputValue === \"BLACKFRIDAY2019\"\r\n    ) {\r\n      const disTotal = NaN * discountprice;\r\n      return disTotal;\r\n    } else {\r\n      const finalPrice = NaN;\r\n      return finalPrice;\r\n    }\r\n  };\r\n\r\n  const ErrorCheck = () => {\r\n    if (\r\n      inputValue === \"BLACKFRIDAY\" ||\r\n      inputValue === \"SUMMER19\" ||\r\n      inputValue === \"BLACKFRIDAY2019\"\r\n    ) {\r\n      return (apiKey.current.disabled = true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkout-container\">\r\n      <h3 className=\"checkout-header\">Welcome to Checkout</h3>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Image</th>\r\n            <th scope=\"col\"> Product</th>\r\n            <th scope=\"col\"> Quantity </th>\r\n            <th scope=\"col\">Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {context.cartItems.map((item, index) => {\r\n            return (\r\n              <TableStartPage\r\n                key={index}\r\n                img={item.image}\r\n                name={item.name}\r\n                quantity={item.quantity}\r\n                price={item.price}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot></tfoot>\r\n      </table>\r\n\r\n      <input type=\"text\" ref={apiKey} placeholder=\"Enter Coupon Code\" />\r\n      {ErrorCheck() && <span className=\"validCupon\"> Discount applied </span>}\r\n\r\n      {discountCupon == null && <span> Invalid Coupon code</span>}\r\n      <button\r\n        className=\"button-discount btn btn-primary btn-sm\"\r\n        onClick={discountValues}\r\n      >\r\n        Apply discount\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        ref={userInput}\r\n        placeholder=\"Enter Your name\"\r\n        className=\"input-order-name\"\r\n      />\r\n\r\n      <button\r\n        onClick={() => setOrder(true)}\r\n        className=\"button-discount btn btn-success btn-sm\"\r\n      >\r\n        Order\r\n      </button>\r\n      <h5 className=\"checkout-price\">\r\n        Total Price: {Math.ceil(discountPrice)} kr\r\n      </h5>\r\n      {order && (\r\n        <Order\r\n          discountPrice={discountPrice}\r\n          {...context}\r\n          setOrder={setOrder}\r\n          setDiscountPrice={setDiscountPrice}\r\n          userInput={userInput.current.value}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n// import FetchData from \"./components/FetchData\";\r\nimport Layout from \"./components/Layout\";\r\nimport StartPage from \"./pages/StartPage\";\r\nimport DetailedPage from \"./pages/DetailedPage\";\r\nimport CartPage from \"./pages/CartPage\";\r\nimport CheckoutPage from \"./pages/CheckoutPage\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Order from \"./components/Order\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path=\"/product/:id\"\r\n          render={(props) => {\r\n            return (\r\n              <Layout>\r\n                <DetailedPage {...props} />\r\n              </Layout>\r\n            );\r\n          }}\r\n        ></Route>\r\n        <Route path=\"/checkout\">\r\n          <Layout>\r\n            <CheckoutPage />\r\n          </Layout>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Layout>\r\n            <StartPage />\r\n          </Layout>\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport CartContextProvider from \"./context/CartContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CartContextProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </CartContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}